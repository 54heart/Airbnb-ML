# 58 requires_license---------------
df_test$requires_license <- impute(df_test$requires_license, value = FALSE)
df_test$requires_license <- ifelse(df_test$requires_license==TRUE, 1, 0)
selected_test <- add_test('requires_license')
# 59 room_type---------------
df_test$room_type <- impute(df_test$room_type, value = 'Entire home/apt') # impute one NA with common class
## onehotencode. Created new three columns: var74 roomEntire home/apt, 75 roomPrivate room, 76 roomShared room
library(mltools)
library(data.table)
room_ohe_test <- one_hot(as.data.table(as.factor(df_test$room_type)))
# rename columns
colnames(room_ohe_test) <- c('roomEntire home/apt', 'roomPrivate room', 'roomShared room')
df_test <- cbind(df_test, room_ohe_test)
selected_test <- add_test('roomEntire home/apt')
selected_test <- add_test('roomPrivate room')
selected_test <- add_test('roomShared room')
# 60 security_deposit---------------
# remove $, convert numeric values into yes or no(1, 0), impute NA with mode: 1
df_test$security_deposit <- as.character(df_test$security_deposit)
df_test$security_deposit <- as.numeric(substring(as.character(df_test$security_deposit),2))
df_test$security_deposit <- ifelse(df_test$security_deposit>0,1,0)
df_test$security_deposit <- impute(df_test$security_deposit, value = 1)
selected_test <- add_test('security_deposit')
# 67 transit---------------
library(maxent)
library(RTextTools)
df_test$transit <- as.character(df_test$transit)
matrix_test <- create_matrix(df_test$transit, language="english", removeSparseTerms = 0.95, removeStopwords=TRUE, removeNumbers=FALSE, stemWords=TRUE, stripWhitespace=TRUE, toLower=TRUE)
mat_test <- as.matrix(matrix_test)
flexible <- data.frame(mat_test)
df_test$flexible <- (flexible$bike+flexible$bus+flexible$buses
+flexible$metro+flexible$line+flexible$lines+flexible$subway
+flexible$train+flexible$trains+flexible$transportation)
selected_test <- add_test('flexible')
df$accommodates <- scale(df$accommodates)
df$amenities_count <- scale(df$amenities_count)
df_test$accommodates <- scale(df_test$accommodates)
df_test$amenities_count <- scale(df_test$amenities_count)
df_test$availability_30 <- scale(df_test$availability_30)
df_test$availability_365 <- scale(df_test$availability_365)
df_test$availability_60 <- scale(df_test$availability_60)
df_test$availability_90 <- scale(df_test$availability_90)
df_test$bathrooms <- scale(df_test)
df_test$beds <- scale(df_test$beds)
df_test$bedrooms <- scale(df_test$bedrooms)
df_test$cleaning_fee <- scale(df_test$cleaning_fee)
df_test$extra_people <- scale(df_test$extra_people)
df_test$first_review <- scale(df_test$first_review)
df_test$guests_included <- scale(df_test$guests_included)
df_test$host_listings_count <- scale(df_test$host_listings_count)
df_test$maximum_nights <- scale(df_test$maximum_nights)
df_test$price <- scale(df_test$price)
df_test$experience <- scale(df_test$experience)
# Export as CSV file
df_test<- as.data.frame(df_test)
export <- df_test[selected_test] # use the selected_test features
write.csv(export, file="test_cleaned.csv", row.names = FALSE) #Write dataframe as CSV
set.seed(12345)
df = read.csv("train_cleaned.csv")
df_competition = read.csv("test_cleaned.csv")
## Randomly partition the data into 30% testing data and the remaining 70% data.
test_instn = sample(nrow(df), 0.25*nrow(df))
df_test <- df[test_instn,]
## Save the rest of the data as the data that isn't testing
df_rest <- df[-test_instn,]
## e. Randomly partition the remaining data into 75% training data and 25% validation data.
valid_instn = sample(nrow(df_rest), 0.3*nrow(df_rest))
df_valid <- df_rest[valid_instn,]
df_train <- df_rest[-valid_instn,]
summary(df_train)
df_train$high_booking_rate <- as.factor(df_train$high_booking_rate)
rf <- randomForest(
df_train$high_booking_rate ~ .-high_booking_rate,
data=df_train
)
pred = predict(rf, newdata=df_valid)
mc = table(df_valid$high_booking_rate, pred)
acc = (mc[1] + mc[4])/sum(mc)
acc
pred = predict(rf, newdata=df_competition)
pred = predict(rf, newdata=df_competition)
pred = predict(rf, newdata=df_competition)
nrow(df_competition)
df_train$high_booking_rate <- as.factor(df_train$high_booking_rate)
rf <- randomForest(
df_train$high_booking_rate ~ .-high_booking_rate,
data=df_train
)
col(df_train)
View(df_train)
df = read.csv("train_cleaned.csv")
df_competition = read.csv("test_cleaned.csv")
## Randomly partition the data into 30% testing data and the remaining 70% data.
test_instn = sample(nrow(df), 0.25*nrow(df))
df_test <- df[test_instn,]
## Save the rest of the data as the data that isn't testing
df_rest <- df[-test_instn,]
## e. Randomly partition the remaining data into 75% training data and 25% validation data.
valid_instn = sample(nrow(df_rest), 0.3*nrow(df_rest))
df_valid <- df_rest[valid_instn,]
df_train <- df_rest[-valid_instn,]
df_train$high_booking_rate <- as.factor(df_train$high_booking_rate)
rf <- randomForest(
df_train$high_booking_rate ~ .-high_booking_rate,
data=df_train
)
pred = predict(rf, newdata=df_valid)
mc = table(df_valid$high_booking_rate, pred)
acc = (mc[1] + mc[4])/sum(mc)
acc
pred = predict(rf, newdata=df_competition)
rf <- randomForest(
df_train$high_booking_rate ~ accommodates+ amenities_count+
bathrooms+ Real_Bed+ bedrooms+ beds+ price+
cancellation_policy+require_guest_profile_picture+
guests_included+ host_about+host_has_profile_pic+
host_identity_verified+cleaning_fee+
host_is_superhost+availability_365
availability_60+availability_90+availability_30+
host_response_rate+ host_response_time+
instant_bookable+ is_business_travel_ready+
is_location_exact+ long_stay+
propertyApartment+ propertyCommon_house+
propertySide_house+ propertyHotel+ propertySpecial+
require_guest_phone_verification+
requires_license+
roomPrivate.room+
roomShared.room+ security_deposit+ flexible,
data=df_train
)
rf <- randomForest(
df_train$high_booking_rate ~ accommodates+ amenities_count+
bathrooms+ Real_Bed+ bedrooms+ beds+ price+
cancellation_policy+require_guest_profile_picture+
guests_included+ host_about+host_has_profile_pic+
host_identity_verified+cleaning_fee+
host_is_superhost+availability_365
availability_60+availability_90+availability_30+
host_response_rate+ host_response_time+
instant_bookable+ is_business_travel_ready+
is_location_exact+ long_stay+
propertyApartment+ propertyCommon_house+
propertySide_house+ propertyHotel+ propertySpecial+
require_guest_phone_verification+
requires_license+
roomPrivate.room+
roomShared.room+ security_deposit+ flexible,
data=df_train
)
rf <- randomForest(
high_booking_rate ~ accommodates+ amenities_count+
bathrooms+ Real_Bed+ bedrooms+ beds+ price+
cancellation_policy+require_guest_profile_picture+
guests_included+ host_about+host_has_profile_pic+
host_identity_verified+cleaning_fee+
host_is_superhost+availability_365
availability_60+availability_90+availability_30+
host_response_rate+ host_response_time+
instant_bookable+ is_business_travel_ready+
is_location_exact+ long_stay+
propertyApartment+ propertyCommon_house+
propertySide_house+ propertyHotel+ propertySpecial+
require_guest_phone_verification+
requires_license+
roomPrivate.room+
roomShared.room+ security_deposit+ flexible,
data=df_train
)
rf <- randomForest(
high_booking_rate ~ accommodates+ amenities_count+
bathrooms+ Real_Bed+ bedrooms+ beds+ price+
cancellation_policy+require_guest_profile_picture+
guests_included+ host_about+host_has_profile_pic+
host_identity_verified+cleaning_fee+
host_is_superhost+availability_365
availability_60+availability_90+availability_30+
host_response_rate+ host_response_time+
instant_bookable+ is_business_travel_ready+
is_location_exact+ long_stay+
propertyApartment+ propertyCommon_house+
propertySide_house+ propertyHotel+ propertySpecial+
require_guest_phone_verification+
requires_license+
roomPrivate.room+
roomShared.room+ security_deposit+ flexible,
data=df_train
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+ df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+host_has_profile_pic+
df_train$host_identity_verified+cleaning_fee+
df_train$host_is_superhost+availability_365
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+ df_train$security_deposit+ df_train$flexible
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+ df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+host_has_profile_pic+
df_train$host_identity_verified+cleaning_fee+
df_train$host_is_superhost+availability_365
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+ df_train$security_deposit+ df_train$flexible
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates,df_train$amenities_count,
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+host_has_profile_pic+
df_train$host_identity_verified+cleaning_fee+
df_train$host_is_superhost+availability_365
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+ df_train$security_deposit+ df_train$flexible
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+host_has_profile_pic+
df_train$host_identity_verified+cleaning_fee+
df_train$host_is_superhost+availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+ df_train$security_deposit+ df_train$flexible
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+df_train$host_has_profile_pic+
df_train$host_identity_verified+cleaning_fee+
df_train$host_is_superhost+availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+ df_train$security_deposit+ df_train$flexible
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+df_train$host_has_profile_pic+
df_train$host_identity_verified+df_train$cleaning_fee+
df_train$host_is_superhost+availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+ df_train$security_deposit+ df_train$flexible
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+df_train$host_has_profile_pic+
df_train$host_identity_verified+df_train$cleaning_fee+
df_train$host_is_superhost+df_train$availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+ df_train$security_deposit+ df_train$flexible
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+df_train$host_has_profile_pic+
df_train$host_identity_verified+df_train$cleaning_fee+
df_train$host_is_superhost+df_train$availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+df_train$security_deposit
)
pred = predict(rf, newdata=df_valid)
mc = table(df_valid$high_booking_rate, pred)
acc = (mc[1] + mc[4])/sum(mc)
acc
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+df_train$host_has_profile_pic+
df_train$host_identity_verified+df_train$cleaning_fee+
df_train$host_is_superhost+df_train$availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+df_train$security_deposit,na.action=na.roughfix
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+df_train$host_has_profile_pic+
df_train$host_identity_verified+df_train$cleaning_fee+
df_train$host_is_superhost+df_train$availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+df_train$security_deposit,
na.action=na.roughfix
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+df_train$host_has_profile_pic+
df_train$host_identity_verified+df_train$cleaning_fee+
df_train$host_is_superhost+df_train$availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+df_train$security_deposit,
#na.action=na.roughfix
)
pred = predict(rf, newdata=df_valid)
mc = table(df_valid$high_booking_rate, pred)
acc = (mc[1] + mc[4])/sum(mc)
acc
pred = predict(rf, newdata=df_competition)
df_train$high_booking_rate <- as.factor(df_train$high_booking_rate)
rf <- randomForest(
high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+df_train$host_has_profile_pic+
df_train$host_identity_verified+df_train$cleaning_fee+
df_train$host_is_superhost+df_train$availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+df_train$security_deposit,
#na.action=na.roughfix
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+df_train$host_has_profile_pic+
df_train$host_identity_verified+df_train$cleaning_fee+
df_train$host_is_superhost+df_train$availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+df_train$security_deposit,
#na.action=na.roughfix
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+df_train$host_has_profile_pic+
df_train$host_identity_verified+df_train$cleaning_fee+
df_train$host_is_superhost+df_train$availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+df_train$security_deposit,data = df_train
#na.action=na.roughfix
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+df_train$host_has_profile_pic+
df_train$host_identity_verified+df_train$cleaning_fee+
df_train$host_is_superhost+df_train$availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+df_train$security_deposit,data = df_train
na.action=na.roughfix
)
rf <- randomForest(
df_train$high_booking_rate ~ df_train$accommodates+df_train$amenities_count+
df_train$bathrooms+ df_train$Real_Bed+ df_train$bedrooms+ df_train$beds+
df_train$price+
df_train$cancellation_policy+df_train$require_guest_profile_picture+
df_train$guests_included+ df_train$host_about+df_train$host_has_profile_pic+
df_train$host_identity_verified+df_train$cleaning_fee+
df_train$host_is_superhost+df_train$availability_365+
df_train$availability_60+df_train$availability_90+df_train$availability_30+
df_train$host_response_rate+ df_train$host_response_time+
df_train$instant_bookable+ df_train$is_business_travel_ready+
df_train$is_location_exact+ df_train$long_stay+
df_train$propertyApartment+ df_train$propertyCommon_house+
df_train$propertySide_house+ df_train$propertyHotel+ df_train$propertySpecial+
df_train$require_guest_phone_verification+
df_train$requires_license+
df_train$roomPrivate.room+
df_train$roomShared.room+df_train$security_deposit,data = df_train,
na.action=na.roughfix
)
pred = predict(rf, newdata=df_valid)
mc = table(df_valid$high_booking_rate, pred)
acc = (mc[1] + mc[4])/sum(mc)
acc
